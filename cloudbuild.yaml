steps:
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if ! gcloud pubsub topics list --project=$_TARGET_PROJECT_ID --format="value(name)" | grep -q "$_TRIGGER_TOPIC"; then
          gcloud pubsub topics create $_TRIGGER_TOPIC --project=$_TARGET_PROJECT_ID
        else
          echo "Topic $_TRIGGER_TOPIC already exists."
        fi

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'services'
      - 'enable'
      - 'cloudfunctions.googleapis.com'
      - '--project=$_TARGET_PROJECT_ID'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'services'
      - 'enable'
      - 'cloudbuild.googleapis.com'
      - '--project=$_TARGET_PROJECT_ID'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'functions'
      - 'deploy'
      - $_FUNCTION_NAME
      - '--runtime=nodejs20'
      - '--trigger-topic=${_TRIGGER_TOPIC}'
      - '--entry-point=send'
      - '--service-account=${_ACCOUNT_NAME}@${_TARGET_PROJECT_ID}.iam.gserviceaccount.com'
      - '--region=${_REGION}'
      - '--allow-unauthenticated'
      - '--set-env-vars=OVERRIDE_TO=${_OVERRIDE_TO}'
      - '--project=$_TARGET_PROJECT_ID'

substitutions:
  _TARGET_PROJECT_ID: '$PROJECT_ID'
  _FUNCTION_NAME: sms
  _ACCOUNT_NAME: 'messenger'
  _REGION: '$LOCATION'
  _TRIGGER_TOPIC: sms
  _OVERRIDE_TO: ''

options:
  dynamicSubstitutions: true